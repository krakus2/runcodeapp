{"version":3,"sources":["components/layout/Header.js","styles/layout/Footer.js","components/layout/Footer.js","components/messages/InlineError.js","styles/layout/Landing.js","components/layout/form/Submit.js","components/layout/form/SelectElem.js","components/layout/form/MySlider.js","components/layout/form/ResultRow.js","components/layout/form/AddRemoveButtons.js","components/layout/Landing.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","root","flexGrow","props","classes","react_default","a","createElement","className","AppBar_default","position","color","Toolbar_default","Typography_default","variant","FooterWrapper","styled","div","_templateObject","defaultTheme","createMuiTheme","InlineMessage","_ref","text","isError","style","palette","primary","main","fontSize","width","maxWidth","margin","textAlign","whiteSpace","Wrapper","Landing_templateObject","FormWrapper","form","_templateObject2","ButtonWrapper","_templateObject3","SliderWrapper","_templateObject4","spacing","unit","RowWrapper","_templateObject5","leftMargin","GridWrapper","_templateObject6","grid","theme","button","tooltip","tooltipSize","isInvalid","loading","onSubmitClick","Tooltip_default","title","TransitionComponent","Zoom","placement","Button_default","size","type","disabled","onClick","Fade_default","in","transitionDelay","unmountOnExit","CircularProgress_default","SelectElem","state","labelWidth","this","setState","ReactDOM","findDOMNode","InputLabelRef","offsetWidth","conditionalValue","_this2","_this$props","i","handleArgTypeChange","args","argsName","secondColumn","values","undefined","FormControl_default","formControl","InputLabel_default","ref","htmlFor","concat","Select_default","outlined","select","value","onChange","input","OutlinedInput_default","name","id","map","elem","MenuItem_default","key","Component","display","flexDirection","minWidth","paddingRight","MySlider","handleSliderChange","iloscArg","max","slider","min","dots","ResultRow","generateGrid","number","array","push","join","generateLabel","object","label","handleWynikiChange","iloscWynikow","wyniki","indeksyTablic","fieldsArray","some","el","TextField_default","Object","assign","textField2","InputProps","TheInput2","InputLabelProps","TheLabel3","TheLabel2","marginLeft","marginTop","marginBottom","textField3","padding","fontWeight","transform","button2","zmienIloscWynikow","mini","aria-label","Add_default","Remove_default","Landing","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","checkArgs","result","forEach","handleChange","event","defineProperty","target","toConsumableArray","x","length","Array","from","handleSwitchChange","checked","j","arrayName","_this$setState3","console","log","handleWynikiChange2","czyWynik","e","replace","znak","_this$state","ucieteWyniki","error","tytulZadania","opisZadania","returnArgs","czyRekurencja","postSuccess","onSubmit","bind","assertThisInitialized","preventDefault","online","navigator","onLine","argCopy","axios","post","res","setTimeout","_context","t0","response","data","status","headers","types","keys","messages","request","message","_this3","_this$state3","argsCheck","Paper_default","paper","elevation","placeholder","textField","TheInput","TheLabel","multiline","textArea","FormHelperTextProps","TheHelper","form_MySlider","Fragment","form_SelectElem","layout_form_ResultRow","form_AddRemoveButtons","FormControlLabel_default","control","Switch_default","form_Submit","InlineError","container","flexWrap","marginRight","minHeight","indigo","secondary","green","typography","useNextVariants","App","BrowserRouter","styles","Header","Route","exact","path","component","layout_Footer","Boolean","window","location","hostname","match","render","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4d8c5f0e.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = {\r\n   root: {\r\n      flexGrow: 1\r\n   }\r\n};\r\n\r\nfunction SimpleAppBar(props) {\r\n   const { classes } = props;\r\n\r\n   return (\r\n      <div className={classes.root}>\r\n         <AppBar position=\"static\" color=\"default\">\r\n            <Toolbar>\r\n               <Typography variant=\"h6\" color=\"inherit\">\r\n                  RunCode App\r\n               </Typography>\r\n            </Toolbar>\r\n         </AppBar>\r\n      </div>\r\n   );\r\n}\r\n\r\nSimpleAppBar.propTypes = {\r\n   classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(SimpleAppBar);\r\n","import styled from 'styled-components';\r\n\r\nexport const FooterWrapper = styled.div``;\r\n/*   position: absolute;\r\n   bottom: 0;\r\n   left: 0;\r\n   right: 0;*/\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { FooterWrapper } from '../../styles/layout/Footer';\r\n\r\nconst styles = {\r\n   root: {\r\n      flexGrow: 1\r\n   }\r\n};\r\n\r\nfunction Footer(props) {\r\n   const { classes } = props;\r\n\r\n   return (\r\n      <FooterWrapper>\r\n         <div className={classes.root}>\r\n            <AppBar position=\"static\" color=\"default\">\r\n               <Toolbar>\r\n                  <Typography variant=\"h6\" color=\"inherit\">\r\n                     Footer\r\n                  </Typography>\r\n               </Toolbar>\r\n            </AppBar>\r\n         </div>\r\n      </FooterWrapper>\r\n   );\r\n}\r\n\r\nFooter.propTypes = {\r\n   classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Footer);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nconst defaultTheme = createMuiTheme();\r\n\r\nconst InlineMessage = ({ text, isError }) => (\r\n    <div\r\n        style={{\r\n            color: isError ? \"#ae5856\" : defaultTheme.palette.primary.main,\r\n            fontSize: \"14px\",\r\n            width: \"auto\",\r\n            maxWidth: \"450px\",\r\n            margin: \"5px auto 0 auto\",\r\n            textAlign: \"center\",\r\n            whiteSpace: \"pre\"\r\n        }}\r\n    >\r\n        {text}\r\n    </div>\r\n);\r\n\r\nInlineMessage.propTypes = {\r\n    isError: PropTypes.bool.isRequired,\r\n    text: PropTypes.string.isRequired\r\n};\r\n\r\nexport default InlineMessage;\r\n","import styled from \"styled-components\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nconst defaultTheme = createMuiTheme();\r\n\r\nexport const Wrapper = styled.div`\r\n    font-size: 18px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n\r\nexport const FormWrapper = styled.form`\r\n    margin-top: 20px;\r\n    width: 100%;\r\n`;\r\n\r\nexport const ButtonWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    margin: 0 auto 0 auto;\r\n`;\r\n\r\nexport const SliderWrapper = styled.div`\r\n    margin: ${defaultTheme.spacing.unit}px 0 ${defaultTheme.spacing.unit}px\r\n        ${defaultTheme.spacing.unit}px;\r\n    width: 100%;\r\n`;\r\n\r\nexport const RowWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    margin: ${defaultTheme.spacing.unit}px;\r\n    position: relative;\r\n    width: 100%;\r\n    ${props => props.leftMargin && \"margin-left\"}: ${defaultTheme.spacing.unit * 2}px;\r\n`;\r\n\r\nexport const GridWrapper = styled.div`\r\n    display: grid;\r\n    ${props => props.grid && \"grid-template-columns\"}: ${props => props.grid};\r\n    grid-gap: 10px;\r\n    margin: ${defaultTheme.spacing.unit}px;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { ButtonWrapper } from '../../../styles/layout/Landing';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n   button: {\r\n      margin: theme.spacing.unit,\r\n      fontSize: '16px',\r\n      width: '125px'\r\n   },\r\n   tooltip: {\r\n      fontSize: theme.spacing.tooltipSize\r\n   }\r\n});\r\n\r\nconst Submit = ({ isInvalid, loading, onSubmitClick, classes }) => (\r\n   <ButtonWrapper>\r\n      {isInvalid ? (\r\n         <Tooltip\r\n            title=\"Wypełnij wszystkie obowiązkowe pola, aby przesłać zadanie\"\r\n            classes={{ tooltip: classes.tooltip }}\r\n            TransitionComponent={Zoom}\r\n            placement=\"bottom\"\r\n         >\r\n            <div>\r\n               <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  size=\"large\"\r\n                  type=\"submit\"\r\n                  disabled\r\n                  onClick={onSubmitClick}\r\n               >\r\n                  {loading ? (\r\n                     <Fade\r\n                        in={loading}\r\n                        style={{\r\n                           transitionDelay: loading ? '200ms' : '0ms'\r\n                        }}\r\n                        unmountOnExit\r\n                     >\r\n                        <CircularProgress color=\"inherit\" size={24} />\r\n                     </Fade>\r\n                  ) : (\r\n                     'Prześlij'\r\n                  )}\r\n               </Button>\r\n            </div>\r\n         </Tooltip>\r\n      ) : (\r\n         <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            size=\"large\"\r\n            type=\"submit\"\r\n            onClick={onSubmitClick}\r\n         >\r\n            {loading ? (\r\n               <Fade\r\n                  in={loading}\r\n                  style={{\r\n                     transitionDelay: loading ? '200ms' : '0ms'\r\n                  }}\r\n                  unmountOnExit\r\n               >\r\n                  <CircularProgress color=\"inherit\" size={24} />\r\n               </Fade>\r\n            ) : (\r\n               'Prześlij'\r\n            )}\r\n         </Button>\r\n      )}\r\n   </ButtonWrapper>\r\n);\r\n\r\nSubmit.propTypes = {\r\n   classes: PropTypes.object.isRequired,\r\n   isInvalid: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Submit);\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst styles = theme => ({\r\n   formControl: {\r\n      margin: theme.spacing.unit,\r\n      width: 'auto',\r\n      display: 'flex',\r\n      flexDirection: 'row'\r\n   },\r\n   select: {\r\n      minWidth: 120,\r\n      paddingRight: 40\r\n   }\r\n});\r\n\r\nclass SelectElem extends Component {\r\n   state = {\r\n      labelWidth: 100\r\n   };\r\n   componentDidMount() {\r\n      this.setState({\r\n         labelWidth: ReactDOM.findDOMNode(this.InputLabelRef).offsetWidth\r\n      });\r\n   }\r\n   render() {\r\n      const {\r\n         i,\r\n         handleArgTypeChange,\r\n         args,\r\n         argsName,\r\n         secondColumn,\r\n         values,\r\n         title,\r\n         classes\r\n      } = this.props;\r\n      const { labelWidth } = this.state;\r\n      let conditionalValue;\r\n      if (secondColumn === true) {\r\n         if (args[i * 2 + 1] === null || args[i * 2 + 1] === undefined) {\r\n            conditionalValue = '';\r\n         } else {\r\n            conditionalValue = args[i * 2 + 1];\r\n         }\r\n      } else {\r\n         if (args[i * 2 + 1] === null || args[i * 2] === undefined) {\r\n            conditionalValue = '';\r\n         } else {\r\n            conditionalValue = args[i * 2];\r\n         }\r\n      }\r\n      return (\r\n         <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel\r\n               ref={ref => {\r\n                  this.InputLabelRef = ref;\r\n               }}\r\n               htmlFor=\"outlined-age-simple\"\r\n            >\r\n               {`${title}`}\r\n            </InputLabel>\r\n            <Select\r\n               classes={{ outlined: classes.select }}\r\n               value={conditionalValue}\r\n               onChange={handleArgTypeChange(i)(secondColumn === true ? 1 : 0)(argsName)}\r\n               input={\r\n                  <OutlinedInput labelWidth={labelWidth} name=\"typ1\" id=\"outlined-age-simple\" />\r\n               }\r\n            >\r\n               {values.map((elem, i) => (\r\n                  <MenuItem value={elem} key={elem}>\r\n                     {`${elem}`}\r\n                  </MenuItem>\r\n               ))}\r\n            </Select>\r\n         </FormControl>\r\n      );\r\n   }\r\n}\r\n\r\nSelectElem.propTypes = {\r\n   classes: PropTypes.object.isRequired,\r\n   i: PropTypes.number.isRequired,\r\n   handleArgTypeChange: PropTypes.func.isRequired,\r\n   args: PropTypes.array.isRequired,\r\n   argsName: PropTypes.string.isRequired,\r\n   secondColumn: PropTypes.bool.isRequired,\r\n   values: PropTypes.array.isRequired,\r\n   title: PropTypes.string.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(SelectElem);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Slider } from 'antd';\r\nimport { SliderWrapper } from '../../../styles/layout/Landing';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst MySlider = ({ handleSliderChange, iloscArg, max }) => {\r\n   return (\r\n      <SliderWrapper>\r\n         <Typography variant=\"h6\">Ilość i typ argumentów funkcji</Typography>\r\n         <Slider min={0} max={max} dots value={iloscArg} onChange={handleSliderChange} />\r\n      </SliderWrapper>\r\n   );\r\n};\r\n\r\nMySlider.propTypes = {\r\n   handleSliderChange: PropTypes.func.isRequired,\r\n   iloscArg: PropTypes.number.isRequired,\r\n   max: PropTypes.number.isRequired\r\n};\r\n\r\nexport default MySlider;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { GridWrapper } from \"../../../styles/layout/Landing\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\nimport \"../../../styles/form/ResultRow.css\";\r\n\r\nconst styles = theme => ({\r\n    textField2: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginTop: \"5px\",\r\n        marginBottom: \"5px\",\r\n        minWidth: \"60px\"\r\n    },\r\n    textField3: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginTop: \"5px\",\r\n        marginBottom: \"5px\",\r\n        minWidth: \"70px\"\r\n    },\r\n    TheInput2: {\r\n        fontSize: 14,\r\n        padding: \"10px 5px\"\r\n    },\r\n    TheLabel2: {\r\n        fontSize: 14,\r\n        fontWeight: 400,\r\n        transform: \"translate(14px, 14px) scale(1)\"\r\n    },\r\n    TheLabel3: {\r\n        fontSize: 14,\r\n        fontWeight: 400,\r\n        transform: \"translate(12px, 14px) scale(1)\"\r\n    },\r\n    tooltip: {\r\n        fontSize: theme.spacing.tooltipSize\r\n    }\r\n});\r\n\r\nclass ResultRow extends Component {\r\n    generateGrid = number => {\r\n        const array = [];\r\n        for (let i = 0; i < number; i++) {\r\n            array.push(\"70px\");\r\n        }\r\n        return array.join(\" \");\r\n    };\r\n\r\n    generateLabel = (i, iloscArg) => {\r\n        const object = {};\r\n        if (i === 0 && iloscArg === 0) {\r\n            object.label = \"Wynik\";\r\n        } else if ((i + 1) % (iloscArg + 1) === 0 && i !== 0) {\r\n            object.label = \"Wynik\";\r\n        } else {\r\n            object.label = `Arg ${(i % (iloscArg + 1)) + 1}`;\r\n        }\r\n        return object;\r\n    };\r\n\r\n    /*getKey() {\r\n      return this.keyCount++;\r\n   }*/\r\n\r\n    render() {\r\n        const {\r\n            handleWynikiChange,\r\n            iloscWynikow,\r\n            iloscArg,\r\n            wyniki,\r\n            indeksyTablic,\r\n            classes\r\n        } = this.props;\r\n        const fieldsArray = [];\r\n\r\n        for (var i = 0; i < iloscWynikow * (iloscArg + 1); i++) {\r\n            if (indeksyTablic.some(el => el === i)) {\r\n                fieldsArray.push(\r\n                    <Tooltip\r\n                        title=\"Wartości tablicy oddziel przecinkami\"\r\n                        classes={{ tooltip: classes.tooltip }}\r\n                        TransitionComponent={Zoom}\r\n                        placement=\"top\"\r\n                    >\r\n                        <div className=\"array\" key={i}>\r\n                            <TextField\r\n                                {...this.generateLabel(i, iloscArg)}\r\n                                type=\"text\"\r\n                                className={classes.textField2}\r\n                                InputProps={{ classes: { input: classes.TheInput2 } }}\r\n                                InputLabelProps={{\r\n                                    classes: {\r\n                                        root:\r\n                                            (i + 1) % (iloscArg + 1) === 0\r\n                                                ? classes.TheLabel3\r\n                                                : classes.TheLabel2\r\n                                    }\r\n                                }}\r\n                                value={wyniki[i] != undefined ? wyniki[i] : \"\"}\r\n                                onChange={handleWynikiChange(i)}\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </div>\r\n                    </Tooltip>\r\n                );\r\n            } else {\r\n                fieldsArray.push(\r\n                    <div key={i}>\r\n                        <TextField\r\n                            {...this.generateLabel(i, iloscArg)}\r\n                            type=\"text\"\r\n                            className={classes.textField2}\r\n                            InputProps={{ classes: { input: classes.TheInput2 } }}\r\n                            InputLabelProps={{\r\n                                classes: {\r\n                                    root:\r\n                                        (i + 1) % (iloscArg + 1) === 0\r\n                                            ? classes.TheLabel3\r\n                                            : classes.TheLabel2\r\n                                }\r\n                            }}\r\n                            value={wyniki[i] != undefined ? wyniki[i] : \"\"}\r\n                            onChange={handleWynikiChange(i)}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n\r\n        return <GridWrapper grid={this.generateGrid(iloscArg + 1)}>{fieldsArray}</GridWrapper>;\r\n    }\r\n}\r\n\r\nResultRow.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    handleWynikiChange: PropTypes.func.isRequired,\r\n    iloscWynikow: PropTypes.number.isRequired,\r\n    iloscArg: PropTypes.number.isRequired,\r\n    wyniki: PropTypes.array.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(ResultRow);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { RowWrapper } from '../../../styles/layout/Landing';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\nconst styles = theme => ({\r\n   button2: {\r\n      margin: theme.spacing.unit,\r\n      color: 'white'\r\n   },\r\n   tooltip: {\r\n      fontSize: theme.spacing.tooltipSize\r\n   }\r\n});\r\n\r\nconst AddRemoveButtons = ({ zmienIloscWynikow, classes }) => (\r\n   <RowWrapper>\r\n      <Tooltip\r\n         title=\"Dodaj wiersz\"\r\n         classes={{ tooltip: classes.tooltip }}\r\n         TransitionComponent={Zoom}\r\n         placement=\"bottom\"\r\n      >\r\n         <Button\r\n            variant=\"fab\"\r\n            mini\r\n            color=\"secondary\"\r\n            aria-label=\"Add\"\r\n            className={classes.button2}\r\n            onClick={zmienIloscWynikow('+')}\r\n         >\r\n            <AddIcon />\r\n         </Button>\r\n      </Tooltip>\r\n      <Tooltip\r\n         title=\"Usuń wiersz\"\r\n         classes={{ tooltip: classes.tooltip }}\r\n         TransitionComponent={Zoom}\r\n         placement=\"bottom\"\r\n      >\r\n         <Button\r\n            variant=\"fab\"\r\n            mini\r\n            color=\"secondary\"\r\n            aria-label=\"Add\"\r\n            className={classes.button2}\r\n            onClick={zmienIloscWynikow('-')}\r\n         >\r\n            <RemoveIcon />\r\n         </Button>\r\n      </Tooltip>\r\n   </RowWrapper>\r\n);\r\n\r\nAddRemoveButtons.propTypes = {\r\n   classes: PropTypes.object.isRequired,\r\n   zmienIloscWynikow: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(AddRemoveButtons);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nimport InlineMessage from \"../messages/InlineError\";\r\nimport Submit from \"./form/Submit\";\r\nimport SelectElem from \"./form/SelectElem\";\r\nimport MySlider from \"./form/MySlider\";\r\nimport ResultRow from \"./form/ResultRow\";\r\nimport AddRemoveButtons from \"./form/AddRemoveButtons\";\r\nimport { FormWrapper, Wrapper, RowWrapper } from \"../../styles/layout/Landing\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\"\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n        width: \"100%\"\r\n    },\r\n    textArea: {\r\n        minHeight: 100\r\n    },\r\n    TheInput: {\r\n        fontSize: 18\r\n    },\r\n    TheLabel: {\r\n        fontSize: 18,\r\n        fontWeight: 400\r\n    },\r\n    TheHelper: {\r\n        fontSize: 11\r\n    },\r\n    paper: {\r\n        margin: \"20px 10px\",\r\n        padding: \"0px 25px 10px 10px\",\r\n        minWidth: 300\r\n    }\r\n});\r\n\r\nclass Landing extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tytulZadania: \"\",\r\n            opisZadania: \"\",\r\n            iloscArg: 1, //ile parametrów ma funkcja\r\n            iloscWynikow: 1, //ile zestawów wartości do przeprowadzenia testu wysłał uzytkownik\r\n            args: [...Array(2)], //typy parametrów funkcji np. string\r\n            returnArgs: [...Array(2)], //typ zwracany przez funkcje np. string\r\n            wyniki: [...Array(2)], //wartości, które posłużą do przeprowadzenia testu np. a = 2, b = 3 i wartość zwracana 6\r\n            czyRekurencja: false, //czy w funkcji zachodzi rekurencja\r\n            loading: false,\r\n            error: {},\r\n            postSuccess: false,\r\n            indeksyTablic: []\r\n        };\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    checkArgs = array => {\r\n        let result = false;\r\n        array.forEach(elem => {\r\n            if (elem === undefined || elem === \"\" || elem === null) result = true;\r\n        });\r\n        return result;\r\n    };\r\n\r\n    async onSubmit(e) {\r\n        e.preventDefault();\r\n        const online = navigator.onLine;\r\n        const {\r\n            tytulZadania,\r\n            opisZadania,\r\n            iloscArg,\r\n            iloscWynikow,\r\n            args,\r\n            returnArgs,\r\n            wyniki,\r\n            czyRekurencja\r\n        } = this.state;\r\n        const argCopy = [];\r\n        for (let i = 0; i < iloscArg * 2; i++) {\r\n            argCopy[i] = args[i];\r\n        }\r\n        const values = {\r\n            tytulZadania,\r\n            opisZadania,\r\n            iloscArg,\r\n            iloscWynikow,\r\n            args,\r\n            returnArgs,\r\n            wyniki,\r\n            czyRekurencja\r\n        };\r\n        console.log(\"submit\", values);\r\n        if (online) {\r\n            try {\r\n                const res = await axios.post(\"/api/tasks\", values);\r\n                this.setState(\r\n                    {\r\n                        tytulZadania: \"\",\r\n                        opisZadania: \"\",\r\n                        iloscArg: 1,\r\n                        iloscWynikow: 1,\r\n                        args: [...Array(2)],\r\n                        returnArgs: [...Array(2)],\r\n                        wyniki: [...Array(2)],\r\n                        czyRekurencja: false,\r\n                        loading: false,\r\n                        error: {},\r\n                        postSuccess: true\r\n                    },\r\n                    () =>\r\n                        setTimeout(() => {\r\n                            this.setState({ postSuccess: false });\r\n                        }, 5000)\r\n                );\r\n                console.log(\"Submit succesed\", res);\r\n            } catch (err) {\r\n                let error = {};\r\n                if (err.response) {\r\n                    // The request was made and the server responded with a status code\r\n                    // that falls out of the range of 2xx\r\n                    console.log(err.response.data);\r\n                    console.log(err.response.status);\r\n                    console.log(err.response.headers);\r\n                    error.types = [...Object.keys(err.response.data)];\r\n                    error.messages = [...Object.values(err.response.data)];\r\n                    error.type = \"response\";\r\n                    //console.log(\"types i messages\", types, messages);\r\n                } else if (err.request) {\r\n                    // The request was made but no response was received\r\n                    // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n                    // http.ClientRequest in node.js\r\n                    console.log(err.request);\r\n                    error.messages = [...Object.values(err.request)];\r\n                    error.type = \"request\";\r\n                } else {\r\n                    // Something happened in setting up the request that triggered an Error\r\n                    console.log(\"Error\", err.message);\r\n                    error.messages = [err.message];\r\n                    error.type = \"other\";\r\n                }\r\n                this.setState({ loading: false, error });\r\n            }\r\n        } else {\r\n            const error = {\r\n                messages: [\"There's no internet connection\"]\r\n            };\r\n            this.setState({ loading: false, error });\r\n        }\r\n    }\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value\r\n        });\r\n    };\r\n\r\n    handleSliderChange = value => {\r\n        let args = [...this.state.args];\r\n        const { iloscWynikow } = this.state;\r\n        const x = (value + 1) * iloscWynikow;\r\n        if (args.length === 0) {\r\n            args = [...Array(value * 2)];\r\n        }\r\n        if (args.length < value * 2) {\r\n            args = [...args, ...Array(value * 2 - args.length)];\r\n        }\r\n        this.setState({\r\n            iloscArg: value,\r\n            args,\r\n            wyniki: [...Array.from(Array(x))]\r\n        });\r\n    };\r\n\r\n    handleSwitchChange = name => event => {\r\n        this.setState({ [name]: event.target.checked });\r\n    };\r\n\r\n    handleArgTypeChange = i => j => arrayName => event => {\r\n        let args = [...this.state[arrayName]];\r\n        const indeksyTablic = [...this.state.indeksyTablic];\r\n        const { iloscArg } = this.state;\r\n        console.log(arrayName);\r\n        args[i * 2 + j] = event.target.value;\r\n\r\n        /*if (arrayName === \"returnArgs\") {\r\n            args.forEach((elem, i) => {\r\n                if (elem === \"Tablica []\") indeksyTablic.push((i + 1) * iloscArg);\r\n            });\r\n        } else {\r\n            args.forEach((elem, i) => {\r\n                if (elem === \"Tablica []\") indeksyTablic.push(i / 2);\r\n            });\r\n        }*/\r\n        args.forEach((elem, i) => {\r\n            if (elem === \"Tablica []\") indeksyTablic.push(i / 2);\r\n        });\r\n\r\n        this.setState({ [arrayName]: args, indeksyTablic });\r\n    };\r\n\r\n    handleWynikiChange2 = i => j => czyWynik => event => {\r\n        const wyniki = [...this.state.wyniki];\r\n        const { iloscArg } = this.state;\r\n\r\n        if (czyWynik === true) {\r\n            wyniki[(i + 1) * (iloscArg + 1) - 1] = event.target.value;\r\n        } else if (czyWynik === false) {\r\n            if (i === 0) {\r\n                wyniki[j * i + j] = event.target.value;\r\n            } else {\r\n                // prettier-ignore\r\n                wyniki[(iloscArg + 1) * i + j] = event.target.value;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleWynikiChange = i => e => {\r\n        const wyniki = [...this.state.wyniki];\r\n        wyniki[i] = e.target.value.replace(/\\s/, \"\");\r\n        this.setState({ wyniki });\r\n    };\r\n\r\n    zmienIloscWynikow = znak => () => {\r\n        const { iloscWynikow, iloscArg } = this.state;\r\n        const wyniki = [...this.state.wyniki];\r\n        if (znak === \"+\") {\r\n            this.setState({\r\n                iloscWynikow: iloscWynikow + 1,\r\n                wyniki: [...wyniki, ...Array.from(Array(iloscArg + 1))]\r\n            });\r\n        } else if (znak === \"-\" && iloscWynikow !== 1) {\r\n            const ucieteWyniki = [];\r\n            for (let i = 0; i < (iloscArg + 1) * (iloscWynikow - 1); i++) {\r\n                ucieteWyniki.push(wyniki[i]);\r\n            }\r\n            this.setState({ iloscWynikow: iloscWynikow - 1, wyniki: ucieteWyniki });\r\n        }\r\n    };\r\n\r\n    onSubmitClick = () => {\r\n        this.setState({ loading: true, error: {} });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const {\r\n            tytulZadania,\r\n            opisZadania,\r\n            iloscArg,\r\n            iloscWynikow,\r\n            args,\r\n            returnArgs,\r\n            wyniki,\r\n            czyRekurencja,\r\n            loading,\r\n            error,\r\n            postSuccess,\r\n            indeksyTablic\r\n        } = this.state;\r\n        const argsCheck =\r\n            this.checkArgs(args) || this.checkArgs(returnArgs) || this.checkArgs(wyniki);\r\n        const isInvalid = opisZadania === \"\" || tytulZadania === \"\" || argsCheck;\r\n        return (\r\n            <Wrapper>\r\n                <Paper classes={{ root: classes.paper }} elevation={1}>\r\n                    <FormWrapper onSubmit={this.onSubmit}>\r\n                        <TextField\r\n                            id=\"tytulZadania\"\r\n                            label=\"Tytuł zadania\"\r\n                            placeholder=\"Zadanie 10\"\r\n                            //helperText={\"This doesn't look like email adress\"}\r\n                            type=\"text\"\r\n                            error={error.types && error.types.some(elem => elem === \"tytulZadania\")}\r\n                            className={classes.textField}\r\n                            InputProps={{ classes: { input: classes.TheInput } }}\r\n                            InputLabelProps={{ classes: { root: classes.TheLabel } }}\r\n                            /*FormHelperTextProps={{\r\n                                classes: { root: classes.TheHelper }\r\n                            }}*/\r\n                            value={tytulZadania}\r\n                            onChange={this.handleChange(\"tytulZadania\")}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <TextField\r\n                            id=\"opis\"\r\n                            label=\"Opis zadania\"\r\n                            error={error.types && error.types.some(elem => elem === \"opisZadania\")}\r\n                            className={classes.textField}\r\n                            InputProps={{\r\n                                multiline: true,\r\n                                classes: { input: classes.textArea }\r\n                            }}\r\n                            InputLabelProps={{ classes: { root: classes.TheLabel } }}\r\n                            FormHelperTextProps={{\r\n                                classes: { root: classes.TheHelper }\r\n                            }}\r\n                            value={opisZadania}\r\n                            onChange={this.handleChange(\"opisZadania\")}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <MySlider\r\n                            handleSliderChange={this.handleSliderChange}\r\n                            iloscArg={iloscArg}\r\n                            max={5}\r\n                        />\r\n                        {Array.from(Array(iloscArg)).map((elem, i) => (\r\n                            <React.Fragment key={i}>\r\n                                <RowWrapper>\r\n                                    <SelectElem\r\n                                        i={i}\r\n                                        handleArgTypeChange={this.handleArgTypeChange}\r\n                                        args={args}\r\n                                        argsName={\"args\"}\r\n                                        secondColumn={false}\r\n                                        values={[\"Typ prosty\", \"Tablica []\"]}\r\n                                        title={`Typ A argumentu ${i + 1}`}\r\n                                    />\r\n                                    <SelectElem\r\n                                        i={i}\r\n                                        handleArgTypeChange={this.handleArgTypeChange}\r\n                                        args={args}\r\n                                        argsName={\"args\"}\r\n                                        secondColumn={true}\r\n                                        values={[\"Int\", \"Double\", \"Float\", \"String\", \"Boolean\"]}\r\n                                        title={`Typ B argumentu ${i + 1}`}\r\n                                    />\r\n                                </RowWrapper>\r\n                            </React.Fragment>\r\n                        ))}\r\n                        <RowWrapper>\r\n                            <Typography variant=\"h6\">Typ zwracany</Typography>\r\n                        </RowWrapper>\r\n                        <RowWrapper>\r\n                            <SelectElem\r\n                                i={0}\r\n                                handleArgTypeChange={this.handleArgTypeChange}\r\n                                args={returnArgs}\r\n                                argsName={\"returnArgs\"}\r\n                                secondColumn={false}\r\n                                values={[\"Typ prosty\", \"Tablica []\"]}\r\n                                title={`Typ zwracany A`}\r\n                            />\r\n                            <SelectElem\r\n                                i={0}\r\n                                handleArgTypeChange={this.handleArgTypeChange}\r\n                                args={returnArgs}\r\n                                argsName={\"returnArgs\"}\r\n                                secondColumn={true}\r\n                                values={[\"Int\", \"Double\", \"Float\", \"String\", \"Boolean\"]}\r\n                                title={`Typ zwracany B`}\r\n                            />\r\n                        </RowWrapper>\r\n                        <RowWrapper>\r\n                            <Typography variant=\"h6\">Wyniki</Typography>\r\n                        </RowWrapper>\r\n                        <ResultRow\r\n                            handleWynikiChange={this.handleWynikiChange}\r\n                            iloscWynikow={iloscWynikow}\r\n                            iloscArg={iloscArg}\r\n                            wyniki={wyniki}\r\n                            indeksyTablic={indeksyTablic}\r\n                        />\r\n                        <AddRemoveButtons zmienIloscWynikow={this.zmienIloscWynikow} />\r\n                        <RowWrapper>\r\n                            <Typography variant=\"h6\">Czy w funkcji zachodzi rekurencja?</Typography>\r\n                        </RowWrapper>\r\n                        <RowWrapper leftMargin>\r\n                            <FormControlLabel\r\n                                //label=\"czyRekurencja\"\r\n                                control={\r\n                                    <Switch\r\n                                        checked={czyRekurencja}\r\n                                        onChange={this.handleSwitchChange(\"czyRekurencja\")}\r\n                                        value=\"czyRekurencja\"\r\n                                        color=\"secondary\"\r\n                                    />\r\n                                }\r\n                            />\r\n                        </RowWrapper>\r\n                        <Submit\r\n                            isInvalid={isInvalid}\r\n                            loading={loading}\r\n                            onSubmitClick={this.onSubmitClick}\r\n                        />\r\n                    </FormWrapper>\r\n                    {!!Object.keys(error).length && (\r\n                        <InlineMessage\r\n                            isError={true}\r\n                            text={`Something went wrong. Try again. Message: \\n${error.messages &&\r\n                                error.messages.join(\"\\n\")}`}\r\n                        />\r\n                    )}\r\n                    {!!Object.keys(error).length && (\r\n                        <InlineMessage\r\n                            isError={true}\r\n                            text={`Something went wrong. Try again. Message: \\n${error.messages &&\r\n                                error.messages.join(\"\\n\")}`}\r\n                        />\r\n                    )}\r\n                    {!!postSuccess && (\r\n                        <InlineMessage isError={false} text={\"Zadanie dodano do bazy\"} />\r\n                    )}\r\n                </Paper>\r\n            </Wrapper>\r\n        );\r\n    }\r\n}\r\n\r\nLanding.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Landing);\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport indigo from '@material-ui/core/colors/indigo';\nimport green from '@material-ui/core/colors/green';\nimport Header from './components/layout/Header';\nimport Footer from './components/layout/Footer';\nimport Landing from './components/layout/Landing';\n\nconst theme = createMuiTheme({\n   palette: {\n      primary: { main: indigo[500] },\n      secondary: { main: green[800] }\n   },\n   spacing: {\n      tooltipSize: 12\n   },\n   typography: {\n      useNextVariants: true\n   }\n});\n\nclass App extends Component {\n   render() {\n      return (\n         <Router>\n            <React.Fragment>\n               <MuiThemeProvider theme={theme}>\n                  <Header />\n                  <Route exact path=\"/\" component={Landing} />\n                  <Footer />\n               </MuiThemeProvider>\n            </React.Fragment>\n         </Router>\n      );\n   }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}